import mongoengine as me
from db_models.mos_percentages import MosPercentages


class VideoSettings(me.EmbeddedDocument):
    codec = me.StringField(description="Video Codec", required=True)
    scan_type = me.StringField(description="Scan type of the sequence", required=True)
    duration = me.FloatField(description="Sequence duration in seconds", required=True)
    bitrate = me.FloatField(description="Bit rate")
    frame_rate = me.IntField(description="Frames per second")
    width = me.IntField(description="Image width")
    height = me.FloatField(description="Image height")
    resolution = me.StringField(description="Width x height frame_rate")
    color_space = me.StringField(description="Color space of image")
    pts = me.IntField(description="Number of frame")
    pts_loop = me.IntField(description="Number of loops of pts (2^33)")
    n_frames_metric = me.IntField(description="Number of frames per measure")
    video_second = me.IntField(description="Timestamp of measure related to video duration")
    pix_format = me.StringField(description="Format of pixels in video")
    
    temp_inf_max = me.FloatField(description="Minimum value of temporal information")
    temp_inf_min = me.FloatField(description="Maximum value of temporal information")
    temp_inf_std =  me.FloatField(description="Standard deviation of temporal information")
    temp_inf_median = me.FloatField(description="Median of temporal information")
    temp_inf_avg = me.FloatField(description="Average value of temporal information")
    temp_inf_skewness = me.FloatField(description="Skewness value of temporal information")
    temp_inf_kurtosis = me.FloatField(description="Kurtosis value of temporal information")
    
    spat_inf_max = me.FloatField(description="Maximum value of the spatial information")
    spat_inf_min = me.FloatField(description="Minimum value of the spatial information")
    spat_inf_std = me.FloatField(description="Standard deviation of spatial information")
    spat_inf_median = me.FloatField(description="Median value of spatial information")
    spat_inf_avg = me.FloatField(description="Average value of spatial information")
    spat_inf_skewness = me.FloatField(description="Skewness value of spatial information")
    spat_inf_kurtosis = me.FloatField(description="Kurtosis value of spatial information")
    
    blurring_max = me.FloatField(description="Maximum value of the blurring information")
    blurring_min = me.FloatField(description="Minimum value of the blurring information")
    blurring_std = me.FloatField(description="Standard deviation of blurring information")
    blurring_median = me.FloatField(description="Median value of blurring information")
    blurring_avg = me.FloatField(description="Average value of blurring information")
    blurring_skewness = me.FloatField(description="Skewness value of blurring information")
    blurring_kurtosis = me.FloatField(description="Kurtosis value of blurring information")

    brightness_Y_max = me.FloatField(description="Maximum value of the blurring information")
    brightness_Y_min = me.FloatField(description="Minimum value of the blurring information")
    brightness_Y_std = me.FloatField(description="Standard deviation of blurring information")
    brightness_Y_median = me.FloatField(description="Median value of blurring information")
    brightness_Y_avg = me.FloatField(description="Average value of blurring information")
    brightness_Y_skewness = me.FloatField(description="Skewness value of blurring information")
    brightness_Y_kurtosis = me.FloatField(description="Kurtosis value of blurring information")

    brightness_Cr_max = me.FloatField(description="Maximum value of the blurring information")
    brightness_Cr_min = me.FloatField(description="Minimum value of the blurring information")
    brightness_Cr_std = me.FloatField(description="Standard deviation of blurring information")
    brightness_Cr_median = me.FloatField(description="Median value of blurring information")
    brightness_Cr_avg = me.FloatField(description="Average value of blurring information")
    brightness_Cr_skewness = me.FloatField(description="Skewness value of blurring information")
    brightness_Cr_kurtosis = me.FloatField(description="Kurtosis value of blurring information")

    brightness_Cb_max = me.FloatField(description="Maximum value of the blurring information")
    brightness_Cb_min = me.FloatField(description="Minimum value of the blurring information")
    brightness_Cb_std = me.FloatField(description="Standard deviation of blurring information")
    brightness_Cb_median = me.FloatField(description="Median value of blurring information")
    brightness_Cb_avg = me.FloatField(description="Average value of blurring information")
    brightness_Cb_skewness = me.FloatField(description="Skewness value of blurring information")
    brightness_Cb_kurtosis = me.FloatField(description="Kurtosis value of blurring information")

    brightness_sat_max = me.FloatField(description="Maximum value of the blurring information")
    brightness_sat_min = me.FloatField(description="Minimum value of the blurring information")
    brightness_sat_std = me.FloatField(description="Standard deviation of blurring information")
    brightness_sat_median = me.FloatField(description="Median value of blurring information")
    brightness_sat_avg = me.FloatField(description="Average value of blurring information")
    brightness_sat_skewness = me.FloatField(description="Skewness value of blurring information")
    brightness_sat_kurtosis = me.FloatField(description="Kurtosis value of blurring information")

    contrast_Y_max = me.FloatField(description="Maximum value of the blurring information")
    contrast_Y_min = me.FloatField(description="Minimum value of the blurring information")
    contrast_Y_std = me.FloatField(description="Standard deviation of blurring information")
    contrast_Y_median = me.FloatField(description="Median value of blurring information")
    contrast_Y_avg = me.FloatField(description="Average value of blurring information")
    contrast_Y_skewness = me.FloatField(description="Skewness value of blurring information")
    contrast_Y_kurtosis = me.FloatField(description="Kurtosis value of blurring information")

    contrast_Cr_max = me.FloatField(description="Maximum value of the blurring information")
    contrast_Cr_min = me.FloatField(description="Minimum value of the blurring information")
    contrast_Cr_std = me.FloatField(description="Standard deviation of blurring information")
    contrast_Cr_median = me.FloatField(description="Median value of blurring information")
    contrast_Cr_avg = me.FloatField(description="Average value of blurring information")
    contrast_Cr_skewness = me.FloatField(description="Skewness value of blurring information")
    contrast_Cr_kurtosis = me.FloatField(description="Kurtosis value of blurring information")

    contrast_Cb_max = me.FloatField(description="Maximum value of the blurring information")
    contrast_Cb_min = me.FloatField(description="Minimum value of the blurring information")
    contrast_Cb_std = me.FloatField(description="Standard deviation of blurring information")
    contrast_Cb_median = me.FloatField(description="Median value of blurring information")
    contrast_Cb_avg = me.FloatField(description="Average value of blurring information")
    contrast_Cb_skewness = me.FloatField(description="Skewness value of blurring information")
    contrast_Cb_kurtosis = me.FloatField(description="Kurtosis value of blurring information")

    contrast_sat_max = me.FloatField(description="Maximum value of the blurring information")
    contrast_sat_min = me.FloatField(description="Minimum value of the blurring information")
    contrast_sat_std = me.FloatField(description="Standard deviation of blurring information")
    contrast_sat_median = me.FloatField(description="Median value of blurring information")
    contrast_sat_avg = me.FloatField(description="Average value of blurring information")
    contrast_sat_skewness = me.FloatField(description="Skewness value of blurring information")
    contrast_sat_kurtosis = me.FloatField(description="Kurtosis value of blurring information")

class AudioSettings(me.EmbeddedDocument):
    codec = me.StringField(description="Audio codec", required=True)
    sample_rate = me.FloatField(description="Sample rate of the audio signal", required=True)
    channels = me.FloatField(description="Number of channels", required=True)
    bitrate = me.FloatField(description="Bit rate", required=True)

class VideoSRC(me.EmbeddedDocument):
    url = me.StringField(description="URL of the video source",
                        default="udp://224.0.1.3:5678", required=True)
    program_number = me.IntField(description="Program number", default=534, required=True)
    program_name = me.StringField(description="Name of program")
    service_name = me.StringField(description="Channel service name", default="La 1 HD", required=True)
    service_provider = me.StringField(description="Service provider broadcaster", default="RTVE", required=True)
    nb_streams = me.FloatField(description="Number of streams", default=7, required=True)

class MosAnalysis(me.EmbeddedDocument):
    strategy = me.StringField(description="Machine learning method used", required=True)
    confidence_intervals = me.ListField(me.FloatField(), description="Confidence interval for prediction",
                                       default=[2.4, 2.7], required=True)
    percentage = me.StringField(description="Alpha level of significance", default="0.95", required=True)
    mos = me.FloatField(description="Mean Opinion Score (Mos)", default=2.5, required=True)

class VideoAnalysis(me.Document):
    journey_datetime = me.DateTimeField(description="Datetime of journey (identifier) for this object")
    content_type = me.StringField(description="type of content in streaming")
    timestamp = me.StringField(description="timestamp", default="2019-10-01 15:58:03 CEST", required=True)
    lost_frames = me.IntField(description="Lost frames in streaming", default=-2)
    mode = me.StringField(description="Mode of the process", default="complete", required=True)
    inserted_at = me.IntField(description="Ingestion timestamp", required=True)
    confidence_intervals = me.FloatField(description="Confidence percentage for the interval")
    mosAnalysis = me.EmbeddedDocumentField(MosAnalysis, description="Mos analysis information")
    videoSRC = me.EmbeddedDocumentField(VideoSRC, description="Video source information")
    videoSettings = me.EmbeddedDocumentField(VideoSettings, description="Video settings information")
    audioSettings = me.EmbeddedDocumentField(AudioSettings, description="Audio settings information")